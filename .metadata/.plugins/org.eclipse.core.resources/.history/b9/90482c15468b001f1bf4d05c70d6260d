package co.edu.uco.ucobet.data.dao.impl.sqlserver;

import java.io.PrintStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.UUID;

import co.edu.uco.crosscutting.helpers.UUIDHelper;
import co.edu.uco.ucobet.data.dao.CountryDAO;
import co.edu.uco.ucobet.entity.CountryEntity;

public class CountrySqlServerDAO implements CountryDAO {

	private final String url = "jdbc:sqlserver://ucobet-server.database.windows.net:1433;database=ucobet-db";
	private final String user = "ucobetdbuser";
	private final String password = "uc0b3tdbus3r!";
	
//	private final String url = "jdbc:postgresql://localhost:5432/baseJavaPractica";
//	private final String user = "postgres";
//	private final String password = "123456";
	
	public void pruebaBase() {
		try(Connection conexion = DriverManager.getConnection(url, user, password)) {
			if (conexion != null) {
				System.out.println("Conexion exitosa");
			}
		} catch (SQLException p) {
			System.out.println("No se conectó");
			p.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		CountrySqlServerDAO intentodeConexion = new CountrySqlServerDAO();
		intentodeConexion.pruebaBase();
	}
	
	
	@Override
	public CountryEntity fingByID(UUID id) {
//		String instruccionSQL="SELECT id,nombre FROM country WHERE id=?";
//		try(Connection connection = DriverManager.getConnection(url, user, password);){
//			if(connection != null) {
//				PreparedStatement miSentencia = connection.prepareStatement(instruccionSQL);
//				miSentencia.setString(1, id.toString());
//				ResultSet miResultset = miSentencia.executeQuery();
//				while(miResultset.next()) {
//					System.out.print("\n ID: "+miResultset.getString(1)+" NombrePais: "+miResultset.getString(2) );
//				}
//				miResultset.close();
//			}else {
//				System.out.print("Failed to connect Post");
//			}
//		} catch (SQLException e) {
//			e.printStackTrace();
//		}
//		// TODO Auto-generated method stub
//		return null;
		String instruccionSQL = "SELECT id, nombre FROM country WHERE id = ?";
	    CountryEntity country = null; // Instancia para almacenar el resultado
	    
	    try (Connection connection = DriverManager.getConnection(url, user, password)) {
	        if (connection != null) {
	            PreparedStatement miSentencia = connection.prepareStatement(instruccionSQL);
	            miSentencia.setString(1, id.toString()); // Asignar el UUID como String
	            
	            ResultSet miResultset = miSentencia.executeQuery();
	            
	            if (miResultset.next()) { // Verificar si hay resultado
	                // Crear un nuevo objeto CountryEntity y asignar los valores
	                country = new CountryEntity();
	                country.setId(UUIDHelper.convertToUUID(miResultset.getString("id"))); // Asignar el UUID
	                country.setName(miResultset.getString("nombre")); // Asignar el nombre
	            }
	            
	            miResultset.close();
	        } else {
	            System.out.println("Failed to connect to the database");
	        }
	    } catch (SQLException e) {
	        e.printStackTrace();
	    }
	    
	    // Retornar el objeto CountryEntity (si no se encuentra, retornará null)
	    return country;
	}

	@Override
	public List<CountryEntity> findAll() {
//		String instruccionSQL="SELECT id,nombre FROM country";
//		try(Connection connection = DriverManager.getConnection(url, user, password);){
//			if(connection != null) {
//				Statement miSentencia = connection.createStatement();
//				ResultSet miResultset = miSentencia.executeQuery(instruccionSQL);
//				while(miResultset.next()) {
//					System.out.print("\n ID: "+miResultset.getString(1)+" NombrePais: "+miResultset.getString(2) );
//				}
//				miResultset.close();
//			}else {
//				System.out.print("Failed to connect Post");
//			}
//		} catch (SQLException e) {
//			e.printStackTrace();
//		}
//		// TODO Auto-generated method stub
//		return null;
		String instruccionSQL = "SELECT id, nombre FROM country";
	    List<CountryEntity> countryList = new ArrayList<>(); // Lista para almacenar los resultados
	    
	    try (Connection connection = DriverManager.getConnection(url, user, password)) {
	        if (connection != null) {
	            Statement miSentencia = connection.createStatement();
	            ResultSet miResultset = miSentencia.executeQuery(instruccionSQL);
	            
	            while (miResultset.next()) {
	                // Crear un nuevo objeto CountryEntity y asignar los valores
	                CountryEntity country = new CountryEntity();
	                country.setId(UUIDHelper.convertToUUID(miResultset.getString("id")));
	                country.setName(miResultset.getString("nombre"));
	                
	                // Agregar el objeto a la lista
	                countryList.add(country);
	            }
	            
	            miResultset.close();
	        } else {
	            System.out.println("Failed to connect to the database");
	        }
	    } catch (SQLException e) {
	        e.printStackTrace();
	    }
	    
	    // Retornar la lista de CountryEntity
	    return countryList;
	}

	@Override
	public List<CountryEntity> findByFilter(CountryEntity filter) {
		
	    return null; 
	}
	
//	public static void main(String[] args) {
//		PrintStream consola = System.out;
////		// Crear una instancia de la clase donde está el método findAll()
////        CountrySqlServerDAO countryService = new CountrySqlServerDAO();
////
////        // Llamar a findAll() para obtener la lista de CountryEntity
////        List<CountryEntity> countries = countryService.findAll();
////
////        // Verificar si la lista no está vacía y recorrerla
////        if (countries != null && !countries.isEmpty()) {
////            for (CountryEntity country : countries) {
////                // Mostrar los atributos de cada CountryEntity
////                System.out.println("ID: " + country.getId() + ", Nombre: " + country.getName());
////            }
////        } else {
////            System.out.println("No se encontraron países.");
////        }
////		CountrySqlServerDAO countryService = new CountrySqlServerDAO();
////		UUID idd = UUIDHelper.convertToUUID("3c05c270-9149-43ab-b7a8-c6bd9b9eeea0");
////		CountryEntity country = countryService.fingByID(idd);
////		consola.println(country.getName()+ country.getId());
//		
//	}

	
}
